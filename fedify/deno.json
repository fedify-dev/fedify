{
  "name": "@fedify/fedify",
  "version": "1.8.1",
  "license": "MIT",
  "exports": {
    ".": "./mod.ts",
    "./compat": "./compat/mod.ts",
    "./federation": "./federation/mod.ts",
    "./nodeinfo": "./nodeinfo/mod.ts",
    "./runtime": "./runtime/mod.ts",
    "./sig": "./sig/mod.ts",
    "./vocab": "./vocab/mod.ts",
    "./webfinger": "./webfinger/mod.ts",
    "./x/cfworkers": "./x/cfworkers.ts",
    "./x/denokv": "./x/denokv.ts",
    "./x/fresh": "./x/fresh.ts",
    "./x/hono": "./x/hono.ts",
    "./x/sveltekit": "./x/sveltekit.ts"
  },
  "imports": {
    "@cfworker/json-schema": "npm:@cfworker/json-schema@^4.1.1",
    "@hugoalh/http-header-link": "jsr:@hugoalh/http-header-link@^1.0.2",
    "@multiformats/base-x": "npm:@multiformats/base-x@^4.0.1",
    "@opentelemetry/api": "npm:@opentelemetry/api@^1.9.0",
    "@opentelemetry/semantic-conventions": "npm:@opentelemetry/semantic-conventions@^1.27.0",
    "@phensley/language-tag": "npm:@phensley/language-tag@^1.9.0",
    "@std/assert": "jsr:@std/assert@^0.226.0",
    "@std/testing": "jsr:@std/testing@^0.224.0",
    "@std/url": "jsr:@std/url@^0.225.1",
    "asn1js": "npm:asn1js@^3.0.5",
    "byte-encodings": "npm:byte-encodings@^1.0.11",
    "es-toolkit": "jsr:@es-toolkit/es-toolkit@^1.39.5",
    "fast-check": "npm:fast-check@^3.22.0",
    "fetch-mock": "npm:fetch-mock@^12.5.2",
    "json-canon": "npm:json-canon@^1.0.1",
    "jsonld": "npm:jsonld@^8.3.2",
    "multicodec": "npm:multicodec@^3.2.1",
    "pkijs": "npm:pkijs@^3.2.4",
    "structured-field-values": "npm:structured-field-values@^2.0.4",
    "uri-template-router": "npm:uri-template-router@^0.0.17",
    "url-template": "npm:url-template@^3.1.1"
  },
  "include": [
    "vocab/vocab.ts"
  ],
  "exclude": [
    ".test-report.xml",
    "apidoc/",
    "cfworkers/dist/",
    "cfworkers/fixtures/",
    "cfworkers/imports.ts",
    "cfworkers/README.md",
    "cfworkers/server.ts",
    "cfworkers/server.js",
    "cfworkers/server.js.map",
    "codegen/schema.yaml",
    "dist/",
    "node_modules/",
    "npm/",
    "pnpm-lock.yaml",
    "vocab/*.yaml",
    "!vocab/vocab.ts"
  ],
  "tasks": {
    "codegen": "deno run --allow-read --allow-write --check codegen/main.ts vocab/ ../runtime/ > vocab/.vocab.ts && deno fmt vocab/.vocab.ts && mv vocab/.vocab.ts vocab/vocab.ts && deno cache vocab/vocab.ts && deno check vocab/vocab.ts",
    "cache": {
      "command": "deno cache mod.ts",
      "dependencies": [
        "codegen"
      ]
    },
    "check": {
      "command": "deno fmt --check && deno lint && deno check */*.ts",
      "dependencies": [
        "codegen"
      ]
    },
    "test": {
      "command": "deno test --check --doc --allow-read --allow-write --allow-env --unstable-kv --trace-leaks --parallel",
      "dependencies": [
        "codegen"
      ]
    },
    "coverage": "deno task test --clean --coverage && deno coverage --html coverage",
    "bench": {
      "command": "deno bench --allow-read --allow-write --allow-net --allow-env --allow-run --unstable-kv",
      "dependencies": [
        "codegen"
      ]
    },
    "apidoc": {
      "command": "deno doc --html --name=Fedify --output=apidoc/ mod.ts",
      "dependencies": [
        "codegen"
      ]
    },
    "publish": {
      "command": "deno publish",
      "dependencies": [
        "codegen"
      ]
    },
    "pnpm:install": "pnpm install",
    "pnpm:build": {
      "command": "pnpm exec tsdown",
      "dependencies": [
        "codegen",
        "pnpm:install"
      ]
    },
    "test:node": {
      "command": "cd dist/ && node --test",
      "dependencies": [
        "pnpm:build"
      ]
    },
    "test:bun": {
      "command": "cd dist/ && bun test --timeout 60000",
      "dependencies": [
        "pnpm:build"
      ]
    },
    "test:cfworkers": {
      "command": "pnpm exec wrangler deploy --dry-run --outdir cfworkers && node --import=tsx cfworkers/client.ts",
      "dependencies": [
        "pnpm:build"
      ]
    },
    "test-all": {
      "dependencies": [
        "check",
        "test",
        "test:node",
        "test:bun",
        "test:cfworkers"
      ]
    }
  }
}
