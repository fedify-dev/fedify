export const snapshot = {};

snapshot[`Deno.inspect(Emoji) [auto] 1`] = `
'Emoji {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {}
}'
`;

snapshot[`Deno.inspect(Emoji) [auto] 2`] = `
'Emoji {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Emoji) [auto] 3`] = `
'Emoji {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ]
}'
`;

snapshot[`Deno.inspect(ChatMessage) [auto] 1`] = `
'ChatMessage {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  quoteUrl: URL "https://fedify.dev/"
}'
`;

snapshot[`Deno.inspect(ChatMessage) [auto] 2`] = `
'ChatMessage {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  quoteUrl: URL "https://fedify.dev/"
}'
`;

snapshot[`Deno.inspect(ChatMessage) [auto] 3`] = `
'ChatMessage {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  quoteUrl: URL "https://fedify.dev/"
}'
`;

snapshot[`Deno.inspect(EmojiReact) [auto] 1`] = `
'EmojiReact {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(EmojiReact) [auto] 2`] = `
'EmojiReact {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(EmojiReact) [auto] 3`] = `
'EmojiReact {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(PropertyValue) [auto] 1`] = `'PropertyValue { id: URL "https://example.com/", name: "hello", value: "hello" }'`;

snapshot[`Deno.inspect(PropertyValue) [auto] 2`] = `'PropertyValue { id: URL "https://example.com/", name: "hello", value: "hello" }'`;

snapshot[`Deno.inspect(PropertyValue) [auto] 3`] = `'PropertyValue { id: URL "https://example.com/", name: "hello", value: "hello" }'`;

snapshot[`Deno.inspect(Export) [auto] 1`] = `
'Export {
  id: URL "https://example.com/",
  endpoint: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Export) [auto] 2`] = `
'Export {
  id: URL "https://example.com/",
  endpoint: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Export) [auto] 3`] = `
'Export {
  id: URL "https://example.com/",
  endpoints: [ URL "https://example.com/", URL "https://example.com/" ]
}'
`;

snapshot[`Deno.inspect(DataIntegrityProof) [auto] 1`] = `
'DataIntegrityProof {
  id: URL "https://example.com/",
  cryptosuite: "eddsa-jcs-2022",
  verificationMethod: Multikey {},
  proofPurpose: "assertionMethod",
  proofValue: Uint8Array(64) [
    143, 155,  90, 201,  20,  23, 208, 209, 136, 190, 250,
    133, 143, 116,  68, 152,  29, 200, 121, 218, 186,  80,
    152,  60,  67, 235, 207, 114,  95,  56,  88,  17, 159,
     35, 197, 191, 132,  35, 118, 162,  29,  83, 192, 190,
     26, 170, 150, 110,  48, 101,  89, 118, 240, 176, 219,
    120,  13, 245, 193, 173,  63, 189, 243,   7
  ],
  created: 2024-03-03T08:30:06.796196096Z
}'
`;

snapshot[`Deno.inspect(DataIntegrityProof) [auto] 2`] = `
'DataIntegrityProof {
  id: URL "https://example.com/",
  cryptosuite: "eddsa-jcs-2022",
  verificationMethod: URL "https://example.com/",
  proofPurpose: "assertionMethod",
  proofValue: Uint8Array(64) [
    143, 155,  90, 201,  20,  23, 208, 209, 136, 190, 250,
    133, 143, 116,  68, 152,  29, 200, 121, 218, 186,  80,
    152,  60,  67, 235, 207, 114,  95,  56,  88,  17, 159,
     35, 197, 191, 132,  35, 118, 162,  29,  83, 192, 190,
     26, 170, 150, 110,  48, 101,  89, 118, 240, 176, 219,
    120,  13, 245, 193, 173,  63, 189, 243,   7
  ],
  created: 2024-03-03T08:30:06.796196096Z
}'
`;

snapshot[`Deno.inspect(DataIntegrityProof) [auto] 3`] = `
'DataIntegrityProof {
  id: URL "https://example.com/",
  cryptosuite: "eddsa-jcs-2022",
  verificationMethod: Multikey {},
  proofPurpose: "assertionMethod",
  proofValue: Uint8Array(64) [
    143, 155,  90, 201,  20,  23, 208, 209, 136, 190, 250,
    133, 143, 116,  68, 152,  29, 200, 121, 218, 186,  80,
    152,  60,  67, 235, 207, 114,  95,  56,  88,  17, 159,
     35, 197, 191, 132,  35, 118, 162,  29,  83, 192, 190,
     26, 170, 150, 110,  48, 101,  89, 118, 240, 176, 219,
    120,  13, 245, 193, 173,  63, 189, 243,   7
  ],
  created: 2024-03-03T08:30:06.796196096Z
}'
`;

snapshot[`Deno.inspect(CryptographicKey) [auto] 1`] = `
'CryptographicKey {
  id: URL "https://example.com/",
  owner: Application {},
  publicKey: CryptoKey {
    type: "public",
    extractable: true,
    algorithm: {
      name: "RSASSA-PKCS1-v1_5",
      modulusLength: 2048,
      publicExponent: Uint8Array(3) [ 1, 0, 1 ],
      hash: { name: "SHA-256" }
    },
    usages: [ "verify" ]
  }
}'
`;

snapshot[`Deno.inspect(CryptographicKey) [auto] 2`] = `
'CryptographicKey {
  id: URL "https://example.com/",
  owner: URL "https://example.com/",
  publicKey: CryptoKey {
    type: "public",
    extractable: true,
    algorithm: {
      name: "RSASSA-PKCS1-v1_5",
      modulusLength: 2048,
      publicExponent: Uint8Array(3) [ 1, 0, 1 ],
      hash: { name: "SHA-256" }
    },
    usages: [ "verify" ]
  }
}'
`;

snapshot[`Deno.inspect(CryptographicKey) [auto] 3`] = `
'CryptographicKey {
  id: URL "https://example.com/",
  owner: Application {},
  publicKey: CryptoKey {
    type: "public",
    extractable: true,
    algorithm: {
      name: "RSASSA-PKCS1-v1_5",
      modulusLength: 2048,
      publicExponent: Uint8Array(3) [ 1, 0, 1 ],
      hash: { name: "SHA-256" }
    },
    usages: [ "verify" ]
  }
}'
`;

snapshot[`Deno.inspect(Multikey) [auto] 1`] = `
'Multikey {
  id: URL "https://example.com/",
  controller: Application {},
  publicKey: CryptoKey {
    type: "public",
    extractable: true,
    algorithm: { name: "Ed25519" },
    usages: [ "verify" ]
  }
}'
`;

snapshot[`Deno.inspect(Multikey) [auto] 2`] = `
'Multikey {
  id: URL "https://example.com/",
  controller: URL "https://example.com/",
  publicKey: CryptoKey {
    type: "public",
    extractable: true,
    algorithm: { name: "Ed25519" },
    usages: [ "verify" ]
  }
}'
`;

snapshot[`Deno.inspect(Multikey) [auto] 3`] = `
'Multikey {
  id: URL "https://example.com/",
  controller: Application {},
  publicKey: CryptoKey {
    type: "public",
    extractable: true,
    algorithm: { name: "Ed25519" },
    usages: [ "verify" ]
  }
}'
`;

snapshot[`Deno.inspect(Accept) [auto] 1`] = `
'Accept {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Accept) [auto] 2`] = `
'Accept {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Accept) [auto] 3`] = `
'Accept {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Activity) [auto] 1`] = `
'Activity {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Activity) [auto] 2`] = `
'Activity {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Activity) [auto] 3`] = `
'Activity {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Add) [auto] 1`] = `
'Add {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Add) [auto] 2`] = `
'Add {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Add) [auto] 3`] = `
'Add {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Announce) [auto] 1`] = `
'Announce {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Announce) [auto] 2`] = `
'Announce {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Announce) [auto] 3`] = `
'Announce {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Application) [auto] 1`] = `
'Application {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  preferredUsernames: [ "hello", <en> "hello" ],
  publicKey: CryptographicKey {},
  assertionMethod: Multikey {},
  manuallyApprovesFollowers: true,
  inbox: OrderedCollection {},
  outbox: OrderedCollection {},
  following: Collection {},
  followers: Collection {},
  liked: Collection {},
  featured: Collection {},
  featuredTags: Collection {},
  streams: [ Collection {} ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: Application {},
  aliases: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  service: DidService {},
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Application) [auto] 2`] = `
'Application {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  preferredUsernames: [ "hello", <en> "hello" ],
  publicKey: URL "https://example.com/",
  assertionMethod: URL "https://example.com/",
  manuallyApprovesFollowers: true,
  inbox: URL "https://example.com/",
  outbox: URL "https://example.com/",
  following: URL "https://example.com/",
  followers: URL "https://example.com/",
  liked: URL "https://example.com/",
  featured: URL "https://example.com/",
  featuredTags: URL "https://example.com/",
  streams: [ URL "https://example.com/" ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: URL "https://example.com/",
  alias: URL "https://example.com/",
  service: URL "https://example.com/",
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Application) [auto] 3`] = `
'Application {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  preferredUsernames: [ "hello", "hello" ],
  publicKeys: [ CryptographicKey {}, CryptographicKey {} ],
  assertionMethods: [ Multikey {}, Multikey {} ],
  manuallyApprovesFollowers: true,
  inbox: OrderedCollection {},
  outbox: OrderedCollection {},
  following: Collection {},
  followers: Collection {},
  liked: Collection {},
  featured: Collection {},
  featuredTags: Collection {},
  streams: [ Collection {}, Collection {} ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: Application {},
  aliases: [ Application {}, Application {} ],
  services: [ DidService {}, DidService {} ],
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Arrive) [auto] 1`] = `
'Arrive {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Arrive) [auto] 2`] = `
'Arrive {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Arrive) [auto] 3`] = `
'Arrive {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Article) [auto] 1`] = `
'Article {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  quoteUrl: URL "https://fedify.dev/"
}'
`;

snapshot[`Deno.inspect(Article) [auto] 2`] = `
'Article {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  quoteUrl: URL "https://fedify.dev/"
}'
`;

snapshot[`Deno.inspect(Article) [auto] 3`] = `
'Article {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  quoteUrl: URL "https://fedify.dev/"
}'
`;

snapshot[`Deno.inspect(Audio) [auto] 1`] = `
'Audio {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Audio) [auto] 2`] = `
'Audio {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Audio) [auto] 3`] = `
'Audio {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Block) [auto] 1`] = `
'Block {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Block) [auto] 2`] = `
'Block {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Block) [auto] 3`] = `
'Block {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Collection) [auto] 1`] = `
'Collection {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  totalItems: 123,
  current: CollectionPage {},
  first: CollectionPage {},
  last: CollectionPage {},
  items: [ Object {}, Link {} ]
}'
`;

snapshot[`Deno.inspect(Collection) [auto] 2`] = `
'Collection {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  totalItems: 123,
  current: URL "https://example.com/",
  first: URL "https://example.com/",
  last: URL "https://example.com/",
  items: [ URL "https://example.com/" ]
}'
`;

snapshot[`Deno.inspect(Collection) [auto] 3`] = `
'Collection {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  totalItems: 123,
  current: CollectionPage {},
  first: CollectionPage {},
  last: CollectionPage {},
  items: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(CollectionPage) [auto] 1`] = `
'CollectionPage {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  totalItems: 123,
  current: CollectionPage {},
  first: CollectionPage {},
  last: CollectionPage {},
  items: [ Object {}, Link {} ],
  partOf: Collection {},
  next: CollectionPage {},
  prev: CollectionPage {}
}'
`;

snapshot[`Deno.inspect(CollectionPage) [auto] 2`] = `
'CollectionPage {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  totalItems: 123,
  current: URL "https://example.com/",
  first: URL "https://example.com/",
  last: URL "https://example.com/",
  items: [ URL "https://example.com/" ],
  partOf: URL "https://example.com/",
  next: URL "https://example.com/",
  prev: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(CollectionPage) [auto] 3`] = `
'CollectionPage {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  totalItems: 123,
  current: CollectionPage {},
  first: CollectionPage {},
  last: CollectionPage {},
  items: [ Object {}, Object {} ],
  partOf: Collection {},
  next: CollectionPage {},
  prev: CollectionPage {}
}'
`;

snapshot[`Deno.inspect(Create) [auto] 1`] = `
'Create {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Create) [auto] 2`] = `
'Create {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Create) [auto] 3`] = `
'Create {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Delete) [auto] 1`] = `
'Delete {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Delete) [auto] 2`] = `
'Delete {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Delete) [auto] 3`] = `
'Delete {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Dislike) [auto] 1`] = `
'Dislike {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Dislike) [auto] 2`] = `
'Dislike {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Dislike) [auto] 3`] = `
'Dislike {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Document) [auto] 1`] = `
'Document {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Document) [auto] 2`] = `
'Document {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Document) [auto] 3`] = `
'Document {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Endpoints) [auto] 1`] = `
'Endpoints {
  id: URL "https://example.com/",
  proxyUrl: URL "https://example.com/",
  oauthAuthorizationEndpoint: URL "https://example.com/",
  oauthTokenEndpoint: URL "https://example.com/",
  provideClientKey: URL "https://example.com/",
  signClientKey: URL "https://example.com/",
  sharedInbox: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Endpoints) [auto] 2`] = `
'Endpoints {
  id: URL "https://example.com/",
  proxyUrl: URL "https://example.com/",
  oauthAuthorizationEndpoint: URL "https://example.com/",
  oauthTokenEndpoint: URL "https://example.com/",
  provideClientKey: URL "https://example.com/",
  signClientKey: URL "https://example.com/",
  sharedInbox: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Endpoints) [auto] 3`] = `
'Endpoints {
  id: URL "https://example.com/",
  proxyUrl: URL "https://example.com/",
  oauthAuthorizationEndpoint: URL "https://example.com/",
  oauthTokenEndpoint: URL "https://example.com/",
  provideClientKey: URL "https://example.com/",
  signClientKey: URL "https://example.com/",
  sharedInbox: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Event) [auto] 1`] = `
'Event {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {}
}'
`;

snapshot[`Deno.inspect(Event) [auto] 2`] = `
'Event {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Event) [auto] 3`] = `
'Event {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ]
}'
`;

snapshot[`Deno.inspect(Flag) [auto] 1`] = `
'Flag {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Flag) [auto] 2`] = `
'Flag {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Flag) [auto] 3`] = `
'Flag {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Follow) [auto] 1`] = `
'Follow {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Follow) [auto] 2`] = `
'Follow {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Follow) [auto] 3`] = `
'Follow {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Group) [auto] 1`] = `
'Group {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  preferredUsernames: [ "hello", <en> "hello" ],
  publicKey: CryptographicKey {},
  assertionMethod: Multikey {},
  manuallyApprovesFollowers: true,
  inbox: OrderedCollection {},
  outbox: OrderedCollection {},
  following: Collection {},
  followers: Collection {},
  liked: Collection {},
  featured: Collection {},
  featuredTags: Collection {},
  streams: [ Collection {} ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: Application {},
  aliases: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  service: DidService {},
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Group) [auto] 2`] = `
'Group {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  preferredUsernames: [ "hello", <en> "hello" ],
  publicKey: URL "https://example.com/",
  assertionMethod: URL "https://example.com/",
  manuallyApprovesFollowers: true,
  inbox: URL "https://example.com/",
  outbox: URL "https://example.com/",
  following: URL "https://example.com/",
  followers: URL "https://example.com/",
  liked: URL "https://example.com/",
  featured: URL "https://example.com/",
  featuredTags: URL "https://example.com/",
  streams: [ URL "https://example.com/" ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: URL "https://example.com/",
  alias: URL "https://example.com/",
  service: URL "https://example.com/",
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Group) [auto] 3`] = `
'Group {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  preferredUsernames: [ "hello", "hello" ],
  publicKeys: [ CryptographicKey {}, CryptographicKey {} ],
  assertionMethods: [ Multikey {}, Multikey {} ],
  manuallyApprovesFollowers: true,
  inbox: OrderedCollection {},
  outbox: OrderedCollection {},
  following: Collection {},
  followers: Collection {},
  liked: Collection {},
  featured: Collection {},
  featuredTags: Collection {},
  streams: [ Collection {}, Collection {} ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: Application {},
  aliases: [ Application {}, Application {} ],
  services: [ DidService {}, DidService {} ],
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Hashtag) [auto] 1`] = `
'Hashtag {
  id: URL "https://example.com/",
  href: URL "https://example.com/",
  rel: "hello",
  mediaType: "hello",
  names: [ "hello", <en> "hello" ],
  language: LanguageTag {
    core: [ "en", undefined, undefined, undefined ],
    _extensions: {},
    _privateUse: "",
    _extlangs: [],
    _compact: "en"
  },
  height: 123,
  width: 123,
  previews: [ Link {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Hashtag) [auto] 2`] = `
'Hashtag {
  id: URL "https://example.com/",
  href: URL "https://example.com/",
  rel: "hello",
  mediaType: "hello",
  names: [ "hello", <en> "hello" ],
  language: LanguageTag {
    core: [ "en", undefined, undefined, undefined ],
    _extensions: {},
    _privateUse: "",
    _extlangs: [],
    _compact: "en"
  },
  height: 123,
  width: 123,
  previews: [ URL "https://example.com/" ]
}'
`;

snapshot[`Deno.inspect(Hashtag) [auto] 3`] = `
'Hashtag {
  id: URL "https://example.com/",
  href: URL "https://example.com/",
  rels: [ "hello", "hello" ],
  mediaType: "hello",
  names: [ "hello", "hello" ],
  language: LanguageTag {
    core: [ "en", undefined, undefined, undefined ],
    _extensions: {},
    _privateUse: "",
    _extlangs: [],
    _compact: "en"
  },
  height: 123,
  width: 123,
  previews: [ Link {}, Link {} ]
}'
`;

snapshot[`Deno.inspect(Ignore) [auto] 1`] = `
'Ignore {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Ignore) [auto] 2`] = `
'Ignore {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Ignore) [auto] 3`] = `
'Ignore {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Image) [auto] 1`] = `
'Image {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Image) [auto] 2`] = `
'Image {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Image) [auto] 3`] = `
'Image {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(IntransitiveActivity) [auto] 1`] = `
'IntransitiveActivity {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(IntransitiveActivity) [auto] 2`] = `
'IntransitiveActivity {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(IntransitiveActivity) [auto] 3`] = `
'IntransitiveActivity {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Invite) [auto] 1`] = `
'Invite {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Invite) [auto] 2`] = `
'Invite {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Invite) [auto] 3`] = `
'Invite {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Join) [auto] 1`] = `
'Join {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Join) [auto] 2`] = `
'Join {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Join) [auto] 3`] = `
'Join {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Leave) [auto] 1`] = `
'Leave {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Leave) [auto] 2`] = `
'Leave {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Leave) [auto] 3`] = `
'Leave {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Like) [auto] 1`] = `
'Like {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Like) [auto] 2`] = `
'Like {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Like) [auto] 3`] = `
'Like {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Link) [auto] 1`] = `
'Link {
  id: URL "https://example.com/",
  href: URL "https://example.com/",
  rel: "hello",
  mediaType: "hello",
  names: [ "hello", <en> "hello" ],
  language: LanguageTag {
    core: [ "en", undefined, undefined, undefined ],
    _extensions: {},
    _privateUse: "",
    _extlangs: [],
    _compact: "en"
  },
  height: 123,
  width: 123,
  previews: [ Link {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Link) [auto] 2`] = `
'Link {
  id: URL "https://example.com/",
  href: URL "https://example.com/",
  rel: "hello",
  mediaType: "hello",
  names: [ "hello", <en> "hello" ],
  language: LanguageTag {
    core: [ "en", undefined, undefined, undefined ],
    _extensions: {},
    _privateUse: "",
    _extlangs: [],
    _compact: "en"
  },
  height: 123,
  width: 123,
  previews: [ URL "https://example.com/" ]
}'
`;

snapshot[`Deno.inspect(Link) [auto] 3`] = `
'Link {
  id: URL "https://example.com/",
  href: URL "https://example.com/",
  rels: [ "hello", "hello" ],
  mediaType: "hello",
  names: [ "hello", "hello" ],
  language: LanguageTag {
    core: [ "en", undefined, undefined, undefined ],
    _extensions: {},
    _privateUse: "",
    _extlangs: [],
    _compact: "en"
  },
  height: 123,
  width: 123,
  previews: [ Link {}, Link {} ]
}'
`;

snapshot[`Deno.inspect(Listen) [auto] 1`] = `
'Listen {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Listen) [auto] 2`] = `
'Listen {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Listen) [auto] 3`] = `
'Listen {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Mention) [auto] 1`] = `
'Mention {
  id: URL "https://example.com/",
  href: URL "https://example.com/",
  rel: "hello",
  mediaType: "hello",
  names: [ "hello", <en> "hello" ],
  language: LanguageTag {
    core: [ "en", undefined, undefined, undefined ],
    _extensions: {},
    _privateUse: "",
    _extlangs: [],
    _compact: "en"
  },
  height: 123,
  width: 123,
  previews: [ Link {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Mention) [auto] 2`] = `
'Mention {
  id: URL "https://example.com/",
  href: URL "https://example.com/",
  rel: "hello",
  mediaType: "hello",
  names: [ "hello", <en> "hello" ],
  language: LanguageTag {
    core: [ "en", undefined, undefined, undefined ],
    _extensions: {},
    _privateUse: "",
    _extlangs: [],
    _compact: "en"
  },
  height: 123,
  width: 123,
  previews: [ URL "https://example.com/" ]
}'
`;

snapshot[`Deno.inspect(Mention) [auto] 3`] = `
'Mention {
  id: URL "https://example.com/",
  href: URL "https://example.com/",
  rels: [ "hello", "hello" ],
  mediaType: "hello",
  names: [ "hello", "hello" ],
  language: LanguageTag {
    core: [ "en", undefined, undefined, undefined ],
    _extensions: {},
    _privateUse: "",
    _extlangs: [],
    _compact: "en"
  },
  height: 123,
  width: 123,
  previews: [ Link {}, Link {} ]
}'
`;

snapshot[`Deno.inspect(Move) [auto] 1`] = `
'Move {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Move) [auto] 2`] = `
'Move {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Move) [auto] 3`] = `
'Move {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Note) [auto] 1`] = `
'Note {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  quoteUrl: URL "https://fedify.dev/"
}'
`;

snapshot[`Deno.inspect(Note) [auto] 2`] = `
'Note {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  quoteUrl: URL "https://fedify.dev/"
}'
`;

snapshot[`Deno.inspect(Note) [auto] 3`] = `
'Note {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  quoteUrl: URL "https://fedify.dev/"
}'
`;

snapshot[`Deno.inspect(Object) [auto] 1`] = `
'Object {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {}
}'
`;

snapshot[`Deno.inspect(Object) [auto] 2`] = `
'Object {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Object) [auto] 3`] = `
'Object {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ]
}'
`;

snapshot[`Deno.inspect(Offer) [auto] 1`] = `
'Offer {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Offer) [auto] 2`] = `
'Offer {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Offer) [auto] 3`] = `
'Offer {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(OrderedCollection) [auto] 1`] = `
'OrderedCollection {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  totalItems: 123,
  current: CollectionPage {},
  first: CollectionPage {},
  last: CollectionPage {},
  items: [ Object {}, Link {} ]
}'
`;

snapshot[`Deno.inspect(OrderedCollection) [auto] 2`] = `
'OrderedCollection {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  totalItems: 123,
  current: URL "https://example.com/",
  first: URL "https://example.com/",
  last: URL "https://example.com/",
  items: [ URL "https://example.com/" ]
}'
`;

snapshot[`Deno.inspect(OrderedCollection) [auto] 3`] = `
'OrderedCollection {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  totalItems: 123,
  current: CollectionPage {},
  first: CollectionPage {},
  last: CollectionPage {},
  items: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(OrderedCollectionPage) [auto] 1`] = `
'OrderedCollectionPage {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  totalItems: 123,
  current: CollectionPage {},
  first: CollectionPage {},
  last: CollectionPage {},
  items: [ Object {}, Link {} ],
  partOf: Collection {},
  next: CollectionPage {},
  prev: CollectionPage {},
  startIndex: 123
}'
`;

snapshot[`Deno.inspect(OrderedCollectionPage) [auto] 2`] = `
'OrderedCollectionPage {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  totalItems: 123,
  current: URL "https://example.com/",
  first: URL "https://example.com/",
  last: URL "https://example.com/",
  items: [ URL "https://example.com/" ],
  partOf: URL "https://example.com/",
  next: URL "https://example.com/",
  prev: URL "https://example.com/",
  startIndex: 123
}'
`;

snapshot[`Deno.inspect(OrderedCollectionPage) [auto] 3`] = `
'OrderedCollectionPage {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  totalItems: 123,
  current: CollectionPage {},
  first: CollectionPage {},
  last: CollectionPage {},
  items: [ Object {}, Object {} ],
  partOf: Collection {},
  next: CollectionPage {},
  prev: CollectionPage {},
  startIndex: 123
}'
`;

snapshot[`Deno.inspect(Organization) [auto] 1`] = `
'Organization {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  preferredUsernames: [ "hello", <en> "hello" ],
  publicKey: CryptographicKey {},
  assertionMethod: Multikey {},
  manuallyApprovesFollowers: true,
  inbox: OrderedCollection {},
  outbox: OrderedCollection {},
  following: Collection {},
  followers: Collection {},
  liked: Collection {},
  featured: Collection {},
  featuredTags: Collection {},
  streams: [ Collection {} ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: Application {},
  aliases: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  service: DidService {},
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Organization) [auto] 2`] = `
'Organization {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  preferredUsernames: [ "hello", <en> "hello" ],
  publicKey: URL "https://example.com/",
  assertionMethod: URL "https://example.com/",
  manuallyApprovesFollowers: true,
  inbox: URL "https://example.com/",
  outbox: URL "https://example.com/",
  following: URL "https://example.com/",
  followers: URL "https://example.com/",
  liked: URL "https://example.com/",
  featured: URL "https://example.com/",
  featuredTags: URL "https://example.com/",
  streams: [ URL "https://example.com/" ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: URL "https://example.com/",
  alias: URL "https://example.com/",
  service: URL "https://example.com/",
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Organization) [auto] 3`] = `
'Organization {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  preferredUsernames: [ "hello", "hello" ],
  publicKeys: [ CryptographicKey {}, CryptographicKey {} ],
  assertionMethods: [ Multikey {}, Multikey {} ],
  manuallyApprovesFollowers: true,
  inbox: OrderedCollection {},
  outbox: OrderedCollection {},
  following: Collection {},
  followers: Collection {},
  liked: Collection {},
  featured: Collection {},
  featuredTags: Collection {},
  streams: [ Collection {}, Collection {} ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: Application {},
  aliases: [ Application {}, Application {} ],
  services: [ DidService {}, DidService {} ],
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Page) [auto] 1`] = `
'Page {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Page) [auto] 2`] = `
'Page {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Page) [auto] 3`] = `
'Page {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Person) [auto] 1`] = `
'Person {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  preferredUsernames: [ "hello", <en> "hello" ],
  publicKey: CryptographicKey {},
  assertionMethod: Multikey {},
  manuallyApprovesFollowers: true,
  inbox: OrderedCollection {},
  outbox: OrderedCollection {},
  following: Collection {},
  followers: Collection {},
  liked: Collection {},
  featured: Collection {},
  featuredTags: Collection {},
  streams: [ Collection {} ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: Application {},
  aliases: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  service: DidService {},
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Person) [auto] 2`] = `
'Person {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  preferredUsernames: [ "hello", <en> "hello" ],
  publicKey: URL "https://example.com/",
  assertionMethod: URL "https://example.com/",
  manuallyApprovesFollowers: true,
  inbox: URL "https://example.com/",
  outbox: URL "https://example.com/",
  following: URL "https://example.com/",
  followers: URL "https://example.com/",
  liked: URL "https://example.com/",
  featured: URL "https://example.com/",
  featuredTags: URL "https://example.com/",
  streams: [ URL "https://example.com/" ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: URL "https://example.com/",
  alias: URL "https://example.com/",
  service: URL "https://example.com/",
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Person) [auto] 3`] = `
'Person {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  preferredUsernames: [ "hello", "hello" ],
  publicKeys: [ CryptographicKey {}, CryptographicKey {} ],
  assertionMethods: [ Multikey {}, Multikey {} ],
  manuallyApprovesFollowers: true,
  inbox: OrderedCollection {},
  outbox: OrderedCollection {},
  following: Collection {},
  followers: Collection {},
  liked: Collection {},
  featured: Collection {},
  featuredTags: Collection {},
  streams: [ Collection {}, Collection {} ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: Application {},
  aliases: [ Application {}, Application {} ],
  services: [ DidService {}, DidService {} ],
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Place) [auto] 1`] = `
'Place {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  accuracy: 12.34,
  altitude: 12.34,
  latitude: 12.34,
  longitude: 12.34,
  radius: 12.34,
  units: "m"
}'
`;

snapshot[`Deno.inspect(Place) [auto] 2`] = `
'Place {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  accuracy: 12.34,
  altitude: 12.34,
  latitude: 12.34,
  longitude: 12.34,
  radius: 12.34,
  units: "m"
}'
`;

snapshot[`Deno.inspect(Place) [auto] 3`] = `
'Place {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  accuracy: 12.34,
  altitude: 12.34,
  latitude: 12.34,
  longitude: 12.34,
  radius: 12.34,
  units: "m"
}'
`;

snapshot[`Deno.inspect(Profile) [auto] 1`] = `
'Profile {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  describes: Object {}
}'
`;

snapshot[`Deno.inspect(Profile) [auto] 2`] = `
'Profile {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  describes: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Profile) [auto] 3`] = `
'Profile {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  describes: Object {}
}'
`;

snapshot[`Deno.inspect(Question) [auto] 1`] = `
'Question {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {},
  exclusiveOptions: [ Object {} ],
  inclusiveOptions: [ Object {} ],
  closed: 2024-03-03T08:30:06.796196096Z,
  voters: 123,
  quoteUrl: URL "https://fedify.dev/"
}'
`;

snapshot[`Deno.inspect(Question) [auto] 2`] = `
'Question {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/",
  exclusiveOptions: [ URL "https://example.com/" ],
  inclusiveOptions: [ URL "https://example.com/" ],
  closed: 2024-03-03T08:30:06.796196096Z,
  voters: 123,
  quoteUrl: URL "https://fedify.dev/"
}'
`;

snapshot[`Deno.inspect(Question) [auto] 3`] = `
'Question {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ],
  exclusiveOptions: [ Object {}, Object {} ],
  inclusiveOptions: [ Object {}, Object {} ],
  closed: 2024-03-03T08:30:06.796196096Z,
  voters: 123,
  quoteUrl: URL "https://fedify.dev/"
}'
`;

snapshot[`Deno.inspect(Read) [auto] 1`] = `
'Read {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Read) [auto] 2`] = `
'Read {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Read) [auto] 3`] = `
'Read {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Reject) [auto] 1`] = `
'Reject {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Reject) [auto] 2`] = `
'Reject {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Reject) [auto] 3`] = `
'Reject {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Relationship) [auto] 1`] = `
'Relationship {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  subject: Object {},
  object: Object {},
  relationship: Object {}
}'
`;

snapshot[`Deno.inspect(Relationship) [auto] 2`] = `
'Relationship {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  subject: URL "https://example.com/",
  object: URL "https://example.com/",
  relationship: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Relationship) [auto] 3`] = `
'Relationship {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  subject: Object {},
  objects: [ Object {}, Object {} ],
  relationships: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Remove) [auto] 1`] = `
'Remove {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Remove) [auto] 2`] = `
'Remove {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Remove) [auto] 3`] = `
'Remove {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Service) [auto] 1`] = `
'Service {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  preferredUsernames: [ "hello", <en> "hello" ],
  publicKey: CryptographicKey {},
  assertionMethod: Multikey {},
  manuallyApprovesFollowers: true,
  inbox: OrderedCollection {},
  outbox: OrderedCollection {},
  following: Collection {},
  followers: Collection {},
  liked: Collection {},
  featured: Collection {},
  featuredTags: Collection {},
  streams: [ Collection {} ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: Application {},
  aliases: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  service: DidService {},
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Service) [auto] 2`] = `
'Service {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  preferredUsernames: [ "hello", <en> "hello" ],
  publicKey: URL "https://example.com/",
  assertionMethod: URL "https://example.com/",
  manuallyApprovesFollowers: true,
  inbox: URL "https://example.com/",
  outbox: URL "https://example.com/",
  following: URL "https://example.com/",
  followers: URL "https://example.com/",
  liked: URL "https://example.com/",
  featured: URL "https://example.com/",
  featuredTags: URL "https://example.com/",
  streams: [ URL "https://example.com/" ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: URL "https://example.com/",
  alias: URL "https://example.com/",
  service: URL "https://example.com/",
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Service) [auto] 3`] = `
'Service {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  preferredUsernames: [ "hello", "hello" ],
  publicKeys: [ CryptographicKey {}, CryptographicKey {} ],
  assertionMethods: [ Multikey {}, Multikey {} ],
  manuallyApprovesFollowers: true,
  inbox: OrderedCollection {},
  outbox: OrderedCollection {},
  following: Collection {},
  followers: Collection {},
  liked: Collection {},
  featured: Collection {},
  featuredTags: Collection {},
  streams: [ Collection {}, Collection {} ],
  endpoints: Endpoints {},
  discoverable: true,
  suspended: true,
  memorial: true,
  indexable: true,
  successor: Application {},
  aliases: [ Application {}, Application {} ],
  services: [ DidService {}, DidService {} ],
  followedMessage: "hello",
  cat: true
}'
`;

snapshot[`Deno.inspect(Source) [auto] 1`] = `
'Source {
  id: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  mediaType: "hello"
}'
`;

snapshot[`Deno.inspect(Source) [auto] 2`] = `
'Source {
  id: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  mediaType: "hello"
}'
`;

snapshot[`Deno.inspect(Source) [auto] 3`] = `
'Source {
  id: URL "https://example.com/",
  contents: [ "hello", "hello" ],
  mediaType: "hello"
}'
`;

snapshot[`Deno.inspect(TentativeAccept) [auto] 1`] = `
'TentativeAccept {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(TentativeAccept) [auto] 2`] = `
'TentativeAccept {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(TentativeAccept) [auto] 3`] = `
'TentativeAccept {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(TentativeReject) [auto] 1`] = `
'TentativeReject {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(TentativeReject) [auto] 2`] = `
'TentativeReject {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(TentativeReject) [auto] 3`] = `
'TentativeReject {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Tombstone) [auto] 1`] = `
'Tombstone {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  deleted: 2024-03-03T08:30:06.796196096Z
}'
`;

snapshot[`Deno.inspect(Tombstone) [auto] 2`] = `
'Tombstone {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  deleted: 2024-03-03T08:30:06.796196096Z
}'
`;

snapshot[`Deno.inspect(Tombstone) [auto] 3`] = `
'Tombstone {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  deleted: 2024-03-03T08:30:06.796196096Z
}'
`;

snapshot[`Deno.inspect(Travel) [auto] 1`] = `
'Travel {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Travel) [auto] 2`] = `
'Travel {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Travel) [auto] 3`] = `
'Travel {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Undo) [auto] 1`] = `
'Undo {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Undo) [auto] 2`] = `
'Undo {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Undo) [auto] 3`] = `
'Undo {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Update) [auto] 1`] = `
'Update {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(Update) [auto] 2`] = `
'Update {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(Update) [auto] 3`] = `
'Update {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(Video) [auto] 1`] = `
'Video {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Video) [auto] 2`] = `
'Video {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(Video) [auto] 3`] = `
'Video {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  width: 123,
  height: 123
}'
`;

snapshot[`Deno.inspect(View) [auto] 1`] = `
'View {
  id: URL "https://example.com/",
  attachments: [ Object {}, Link {}, PropertyValue {} ],
  attributions: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  audience: Object {},
  contents: [ "hello", <en> "hello" ],
  contexts: [ Object {}, Link {} ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Link {} ],
  icon: Image {},
  image: Image {},
  replyTargets: [ Object {}, Link {} ],
  locations: [ Object {}, Link {} ],
  previews: [ Link {}, Object {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ Object {}, Link {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: Object {},
  bto: Object {},
  cc: Object {},
  bcc: Object {},
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: DataIntegrityProof {},
  actors: [ Application {}, Group {}, Organization {}, Person {}, Service {} ],
  object: Object {},
  target: Object {},
  result: Object {},
  origin: Object {},
  instrument: Object {}
}'
`;

snapshot[`Deno.inspect(View) [auto] 2`] = `
'View {
  id: URL "https://example.com/",
  attachments: [ URL "https://example.com/" ],
  attribution: URL "https://example.com/",
  audience: URL "https://example.com/",
  contents: [ "hello", <en> "hello" ],
  contexts: [ URL "https://example.com/" ],
  names: [ "hello", <en> "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ URL "https://example.com/" ],
  icon: URL "https://example.com/",
  image: URL "https://example.com/",
  replyTarget: URL "https://example.com/",
  location: URL "https://example.com/",
  preview: URL "https://example.com/",
  published: 2024-03-03T08:30:06.796196096Z,
  replies: URL "https://example.com/",
  shares: URL "https://example.com/",
  likes: URL "https://example.com/",
  emojiReactions: URL "https://example.com/",
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", <en> "hello" ],
  tags: [ URL "https://example.com/" ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", Link {} ],
  to: URL "https://example.com/",
  bto: URL "https://example.com/",
  cc: URL "https://example.com/",
  bcc: URL "https://example.com/",
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proof: URL "https://example.com/",
  actor: URL "https://example.com/",
  object: URL "https://example.com/",
  target: URL "https://example.com/",
  result: URL "https://example.com/",
  origin: URL "https://example.com/",
  instrument: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(View) [auto] 3`] = `
'View {
  id: URL "https://example.com/",
  attachments: [ Object {}, Object {} ],
  attributions: [ Application {}, Application {} ],
  audiences: [ Object {}, Object {} ],
  contents: [ "hello", "hello" ],
  contexts: [ Object {}, Object {} ],
  names: [ "hello", "hello" ],
  endTime: 2024-03-03T08:30:06.796196096Z,
  generators: [ Object {}, Object {} ],
  icons: [ Image {}, Image {} ],
  images: [ Image {}, Image {} ],
  replyTargets: [ Object {}, Object {} ],
  locations: [ Object {}, Object {} ],
  previews: [ Link {}, Link {} ],
  published: 2024-03-03T08:30:06.796196096Z,
  replies: Collection {},
  shares: Collection {},
  likes: Collection {},
  emojiReactions: Collection {},
  startTime: 2024-03-03T08:30:06.796196096Z,
  summaries: [ "hello", "hello" ],
  tags: [ Object {}, Object {} ],
  updated: 2024-03-03T08:30:06.796196096Z,
  urls: [ URL "https://example.com/", URL "https://example.com/" ],
  tos: [ Object {}, Object {} ],
  btos: [ Object {}, Object {} ],
  ccs: [ Object {}, Object {} ],
  bccs: [ Object {}, Object {} ],
  mediaType: "hello",
  duration: PT1H,
  sensitive: true,
  source: Source {},
  proofs: [ DataIntegrityProof {}, DataIntegrityProof {} ],
  actors: [ Application {}, Application {} ],
  objects: [ Object {}, Object {} ],
  targets: [ Object {}, Object {} ],
  results: [ Object {}, Object {} ],
  origins: [ Object {}, Object {} ],
  instruments: [ Object {}, Object {} ]
}'
`;

snapshot[`Deno.inspect(DidService) [auto] 1`] = `
'DidService {
  id: URL "https://example.com/",
  endpoint: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(DidService) [auto] 2`] = `
'DidService {
  id: URL "https://example.com/",
  endpoint: URL "https://example.com/"
}'
`;

snapshot[`Deno.inspect(DidService) [auto] 3`] = `
'DidService {
  id: URL "https://example.com/",
  endpoints: [ URL "https://example.com/", URL "https://example.com/" ]
}'
`;
